/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI654321351 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI654321830 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187395 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1023410196 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1023410193 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410190 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI33554474 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1023410181 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1023410180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410179 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555129 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555129 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555129.node = NNI33555129;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555129.base = NTI33555113;
var NNI1023410179 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1023410179, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1023410179, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1023410179, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1023410179, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1023410179, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1023410179, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1023410179, name: "JArray", len: 0, sons: null}}};
NTI1023410179.node = NNI1023410179;
var NNI1023410196 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1040187395, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1023410180, name: "Field3", sons: null}]};
NTI1023410196.node = NNI1023410196;
NTI1023410193.base = NTI1023410196;
var NNI1023410190 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1023410193, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554456, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554456, name: "last", sons: null}]};
NTI1023410190.node = NNI1023410190;
NTI1023410198.base = NTI1023410180;
var NNI1023410181 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1023410179, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554439, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI33554474, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554435, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1023410190, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1023410198, name: "elems", sons: null}]]}]};
NTI1023410181.node = NNI1023410181;
NTI1023410180.base = NTI1023410181;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
var NNI654321830 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI654321351, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI654321830.node = NNI654321830;

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function cstrToNimstr(c_33556804) {
      var ln = c_33556804.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556804.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556804.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(6);

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function raiseFieldError2(f_33556778, discVal_33556779) {
    raiseException({message: (f_33556778 || []).concat(discVal_33556779 || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI33555129, name: null, trace: [], up: null}, "FieldDefect");

  
}
var ConstSet2 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function nimBoolToStr(x_33556514) {
  var result_33556515 = [];

    if (x_33556514) {
    result_33556515 = nimCopy(null, makeNimstrLit("true"), NTI33554439);
    }
    else {
      result_33556515 = nimCopy(null, makeNimstrLit("false"), NTI33554439);
    }
    

  return result_33556515;

}

function reprDiscriminant(e_33557409, typ_33557410) {
    var Temporary1;

  var result_33557411 = [];

    switch (typ_33557410.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557409, typ_33557410);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557409 == 0)));
      break;
    default: 
      Temporary1 = HEX24_318767107(e_33557409);
      break;
    }
    result_33557411 = nimCopy(null, Temporary1, NTI33554439);

  return result_33557411;

}

function eqStrings(a_33556931, b_33556932) {
        if (a_33556931 == b_33556932) return true;
    if (a_33556931 === null && b_33556932.length == 0) return true;
    if (b_33556932 === null && a_33556931.length == 0) return true;
    if ((!a_33556931) || (!b_33556932)) return false;
    var alen = a_33556931.length;
    if (alen != b_33556932.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556931[i] != b_33556932[i]) return false;
    return true;
  

  
}

function genericReset(x_33557171, ti_33557172) {
  var result_33557173 = null;

    result_33557173 = null;
    switch (ti_33557172.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557131(ti_33557172)) {
              result_33557173 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557173 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557172.kind == 17)) {
      result_33557173 = {m_type: ti_33557172};
      }
      else {
        result_33557173 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557173 = [];
    
      break;
    case 4:
    case 16:
            result_33557173 = new Array(x_33557171.length);
      for (var i = 0; i < x_33557171.length; ++i) {
        result_33557173[i] = genericReset(x_33557171[i], ti_33557172.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557173;

}
var ConstSet3 = setConstr(5);
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([48, 57]);

function nimCharToStr(x_33556517) {
  var result_33556518 = [];

    result_33556518 = nimCopy(null, mnewString(1), NTI33554439);
    result_33556518[0] = x_33556517;

  return result_33556518;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet6 = setConstr(6);
var ConstSet7 = setConstr(60, 62, 94);
var ConstSet8 = setConstr(60, 62, 94);
var ConstSet9 = setConstr(45, 43, 32);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr([48, 57]);
var ConstSet13 = setConstr([65, 90], [97, 122]);

function addChar(x_33557255, c_33557256) {
    x_33557255.push(c_33557256);

  
}
var ConstSet14 = setConstr(4);
var ConstSet15 = setConstr(4);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_1040187554 = [0];
var questions_list_452984840 = makeNimstrLit("[\x0A  \"I am a sympathetic person.\",\x0A  \"I often use words and phrases from movies and television in conversations.\",\x0A  \"I am often surprised when others tell me I have been rude.\",\x0A  \"Sometimes I talk to loudly or too softly and I am not aware of it.\",\x0A  \"I often don\'t know how to act in social situations.\",\x0A  \"I can \\\"put myself in other people\'s shoes.\\\"\",\x0A  \"I have a hard time figuring out what some phrases mean, like \\\"you are the apple of my eye\\\".\",\x0A  \"I only like to talk to people who share my special interests.\",\x0A  \"I focus on details rather than the overall idea.\",\x0A  \"I always notice how food feels in my mouth. This is more important to me than how it tastes.\",\x0A  \"I miss my best friends or family when we are apart for a long time.\",\x0A  \"Sometimes I offend others by saying what I am thinking, even if I don\'t mean to.\",\x0A  \"I only like to think and talk about a few things that interest me.\",\x0A  \"I\'d rather go out to eat in a restaurant by myself than with someone I know.\",\x0A  \"I cannot imagine what it would be like to be someone else.\",\x0A  \"I have been told that I am clumsy or uncoordinated.\",\x0A  \"Others consider me odd or different.\",\x0A  \"I understand when friends need to be comforted.\",\x0A  \"I am very sensitive to the way my clothes feel when I touch them. How they feel is more important to me than how they look.\",\x0A  \"I like to copy the way certain people speak and act. It helps me appear more normal.\",\x0A  \"It can be very intimidating for me to talk to more than one person at a time.\",\x0A  \"I have to \\\"act normal\\\" to please other people and make them like me.\",\x0A  \"Meeting new people is usually easy for me.\",\x0A  \"I get highly confused when someone interrupts me when I am talking about something I am very interested in.\",\x0A  \"It is difficult for me to understand how other people are feeling when we are talking.\",\x0A  \"I like having a converstation with several people, for instance around a dinner table, at school or at work.\",\x0A  \"I take things too literally, so often I miss what people are trying to say.\",\x0A  \"It is very difficult for me to understand when someone is embarrased or jealous.\",\x0A  \"Some ordinary textures that do not bother others feel very offensive when they touch my skin.\",\x0A  \"I get extremely upset when the way I like to do things is suddenly changed.\",\x0A  \"I have never wanted or needed to have what other people call an \\\"intimate relationship\\\".\",\x0A  \"It is difficult for me to start and stop a conversation. I need to keep going until I am finished.\",\x0A  \"I speak with a normal rhythm.\",\x0A  \"The same sound, color or texture can suddenly change from very sensitive to very dull.\",\x0A  \"The phrase \\\"I\'ve got you under my skin\\\" makes me very uncomfortable.\",\x0A  \"Sometimes the sound of a word or high-pitched noise can be painful to my ears.\",\x0A  \"I am an understanding type of person.\",\x0A  \"I do not connect with characters in movies and cannot feel what they feel.\",\x0A  \"I cannot tell what someone is flirting with me.\",\x0A  \"I can see in my mind in exact detail things that I am interested in.\",\x0A  \"I keep lists of things that interest me, even when they have no practical use (for example sports statistics, train schedules, calendar dates, historical facts and dates).\",\x0A  \"When I feel overwhelmed by my senses, I have to isolate myself to shut them down.\",\x0A  \"I like to talk things over with my friends.\",\x0A  \"I cannot tell if someone is interested or bored with what I am saying.\",\x0A  \"It can be very hard to read someone\'s face, hand and body movements when they are talking.\",\x0A  \"The same thing (like clothes or temperature) can feel very different to me at different times.\",\x0A  \"I feel very comfortable with dating or being in social situations with others.\",\x0A  \"I try to be as helpful as I can when other people tell me their personal problems.\",\x0A  \"I have been told that I have an unusual voice (for example flat, monotone, childish, or high-pitched).\",\x0A  \"Sometimes a thought or a subject gets stuck in my mind and I have to talk about it even if no one is interested.\",\x0A  \"I do certain things with my hands over and over again (like flapping, twirling sticks or strings, waving things by my eyes).\",\x0A  \"I have never been interested in what most of the people I know consider interesting.\",\x0A  \"I am considered a compassionate type of person.\",\x0A  \"I get along with other people by following a set of specific rules that help me look normal.\",\x0A  \"It is very difficult for me to work and function in groups.\",\x0A  \"When I am talking to someone, it is hard to change the subject. If the other persona does so, I can get very upset and confused.\",\x0A  \"Sometimes I have to cover my ears to block out painful noises (like vacuum cleaners or people talking too much or too loudly).\",\x0A  \"I can chat and make small talk with people.\",\x0A  \"Sometimes things that should feel painful are not (for instance when I hurt myself or burn my hand on a stove)\",\x0A  \"When talking to someone, I have a hard time telling when it is my turn to talk or listen.\",\x0A  \"I am considerd a loner by those who know me best.\",\x0A  \"I usually speak in a normal tone.\",\x0A  \"I like things to be exactly the same day after day and even small changes in my routines upset me.\",\x0A  \"How to make friends and socialize is a mystery to me.\",\x0A  \"It calms me to spin around or to rock in a chair when I am feeling stressed.\",\x0A  \"The phrase, \\\"He wears his heart on his sleeve.\\\" does not make sense to me.\",\x0A  \"If I am in a place where there are many smells, textures to feel, noises or bright lights, I feel anxious or frightened.\",\x0A  \"I can tell when someone says one thing but means something else.\",\x0A  \"I like to be by myself as much as I can.\",\x0A  \"I keep my thoughts stacked in my memory like they are on filing cards, and I pick out the ones I need by looking through the stack and finding the right one (or another unique way).\",\x0A  \"The same sound sometimes seems very loud or very soft, even though I know it has not changed.\",\x0A  \"I enjoy spending time eating and talking with my family and friends.\",\x0A  \"I can\'t tolerate things I dislike (like smells, textures, sounds or colors).\",\x0A  \"I don\'t like to be hugged or held.\",\x0A  \"When I go somewhere, I have to follow a familiar route or I can get very confused and upset.\",\x0A  \"It is difficult to figure out what other people expect of me.\",\x0A  \"I like to have close friends.\",\x0A  \"People tell me that I give too much detail.\",\x0A  \"I am often told that I ask embarrasing questions.\",\x0A  \"I tend to point out other people\'s mistakes.\"\x0A]\x0A");

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function getVarType_1023415445(x_1023415446, isRawNumber_1023415447, isRawNumber_1023415447_Idx) {
        var Temporary1;

  var result_1023415448 = 0;

  BeforeRet: do {
    result_1023415448 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1023415446)))) {
    case "[object Array]":
      result_1023415448 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1023415448 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1023415446)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1023415446) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1023415446)) {
      result_1023415448 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1023415447[isRawNumber_1023415447_Idx] = true;
        result_1023415448 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1023415448 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1023415448 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1023415448 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1023415448 = 4;
      break BeforeRet;
      break;
    default: 
      break;
    }
  } while (false);

  return result_1023415448;

}

function newJArray_1023410309() {
  var result_1023410310 = null;

    result_1023410310 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1023410310;

}

function len_1023415464(x_1023415465) {
  var result_1023415466 = 0;

          result_1023415466 = x_1023415465.length;
    

  return result_1023415466;

}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet2[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = (old_251658421 + n_251658420));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_452984904 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_452984904 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_452984904;
            result_251658417[result_251658417_Idx][(old_251658421 + iHEX60gensym4_251658435)] = x_251658418.charCodeAt((start_251658419 + iHEX60gensym4_251658435));
            i_452984904 += 1;
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_318767107(x_318767108) {
  var result_318767109 = [[]];

    addInt_251658457(result_318767109, 0, x_318767108);

  return result_318767109[0];

}

function reprEnum(e_33557385, typ_33557386) {
  var result_33557387 = [];

    var tmp_33557388 = false;
    var item_33557389 = typ_33557386.node.sons[e_33557385];
    tmp_33557388 = item_33557389 !== undefined
    if (tmp_33557388) {
    result_33557387 = nimCopy(null, makeNimstrLit(item_33557389.name), NTI33554439);
    }
    else {
      result_33557387 = nimCopy(null, (HEX24_318767107(e_33557385) || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI33554439);
    }
    

  return result_33557387;

}

function add_1023410408(father_1023410409, child_1023410410) {
    var Temporary1;

    var Temporary1 = father_1023410409;
    if (ConstSet1[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1023410179)); }
    Temporary1.elems.push(child_1023410410);;

  
}

function nextPowerOfTwo_704643270(x_704643271) {
  var result_704643272 = 0;

    result_704643272 = (x_704643271 - 1);
    result_704643272 = (result_704643272 | (result_704643272 >> 16));
    result_704643272 = (result_704643272 | (result_704643272 >> 8));
    result_704643272 = (result_704643272 | (result_704643272 >> 4));
    result_704643272 = (result_704643272 | (result_704643272 >> 2));
    result_704643272 = (result_704643272 | (result_704643272 >> 1));
    result_704643272 += (1 + ((x_704643271 <= 0) ? 1 : 0));

  return result_704643272;

}

function slotsNeeded_1073741866(count_1073741867) {
  var result_1073741868 = 0;

    result_1073741868 = nextPowerOfTwo_704643270((Math.trunc((count_1073741867 * 3) / 2) + 4));

  return result_1073741868;

}

function initOrderedTable_1023410280(initialSize_1023410283) {
  var result_1023410284 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1023410286 = slotsNeeded_1073741866(initialSize_1023410283);
    result_1023410284.counter = 0;
    result_1023410284.data = new Array(correctSizeHEX60gensym0_1023410286); for (var i = 0 ; i < correctSizeHEX60gensym0_1023410286 ; ++i) { result_1023410284.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1023410284.first = -1;
    result_1023410284.last = -1;

  return result_1023410284;

}

function newJObject_1023410278() {
  var result_1023410279 = null;

    result_1023410279 = {kind: 5, fields: initOrderedTable_1023410280(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1023410279;

}

function imul_1040187682(a_1040187683, b_1040187684) {
  var result_1040187685 = 0;

    var mask_1040187686 = 65535;
    var aHi_1040187691 = ((a_1040187683 >>> 16) & mask_1040187686);
    var aLo_1040187692 = (a_1040187683 & mask_1040187686);
    var bHi_1040187697 = ((b_1040187684 >>> 16) & mask_1040187686);
    var bLo_1040187698 = (b_1040187684 & mask_1040187686);
    result_1040187685 = ((((aLo_1040187692 * bLo_1040187698) >>> 0) + (((((aHi_1040187691 * bLo_1040187698) >>> 0) + ((aLo_1040187692 * bHi_1040187697) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1040187685;

}

function rotl32_1040187703(x_1040187704, r_1040187705) {
  var result_1040187706 = 0;

    result_1040187706 = ((x_1040187704 << r_1040187705) | (x_1040187704 >>> (32 - r_1040187705)));

  return result_1040187706;

}

function murmurHash_1040187715(x_1040187716) {
  var result_1040187717 = 0;

  BeforeRet: do {
    var size_1040187726 = (x_1040187716).length;
    var stepSize_1040187727 = 4;
    var n_1040187728 = Math.trunc(size_1040187726 / stepSize_1040187727);
    var h1_1040187729 = 0;
    var i_1040187730 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1040187730 < (n_1040187728 * stepSize_1040187727))) break Label2;
          var k1_1040187731 = 0;
          var j_1040187732 = stepSize_1040187727;
          Label3: do {
              Label4: while (true) {
              if (!(0 < j_1040187732)) break Label4;
                j_1040187732 -= 1;
                k1_1040187731 = ((k1_1040187731 << 8) | x_1040187716[(i_1040187730 + j_1040187732)]);
              }
          } while (false);
          i_1040187730 += stepSize_1040187727;
          k1_1040187731 = imul_1040187682(k1_1040187731, 3432918353);
          k1_1040187731 = rotl32_1040187703(k1_1040187731, 15);
          k1_1040187731 = imul_1040187682(k1_1040187731, 461845907);
          h1_1040187729 = (h1_1040187729 ^ k1_1040187731);
          h1_1040187729 = rotl32_1040187703(h1_1040187729, 13);
          h1_1040187729 = ((((h1_1040187729 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while (false);
    var k1_1040187749 = 0;
    var rem_1040187750 = Math.trunc(size_1040187726 % stepSize_1040187727);
    Label5: do {
        Label6: while (true) {
        if (!(0 < rem_1040187750)) break Label6;
          rem_1040187750 -= 1;
          k1_1040187749 = ((k1_1040187749 << 8) | x_1040187716[(i_1040187730 + rem_1040187750)]);
        }
    } while (false);
    k1_1040187749 = imul_1040187682(k1_1040187749, 3432918353);
    k1_1040187749 = rotl32_1040187703(k1_1040187749, 15);
    k1_1040187749 = imul_1040187682(k1_1040187749, 461845907);
    h1_1040187729 = (h1_1040187729 ^ k1_1040187749);
    h1_1040187729 = (h1_1040187729 ^ size_1040187726);
    h1_1040187729 = (h1_1040187729 ^ (h1_1040187729 >>> 16));
    h1_1040187729 = imul_1040187682(h1_1040187729, 2246822507);
    h1_1040187729 = (h1_1040187729 ^ (h1_1040187729 >>> 13));
    h1_1040187729 = imul_1040187682(h1_1040187729, 3266489909);
    h1_1040187729 = (h1_1040187729 ^ (h1_1040187729 >>> 16));
    result_1040187717 = (h1_1040187729 | 0);
    break BeforeRet;
  } while (false);

  return result_1040187717;

}

function hash_1040187814(x_1040187815) {
  var result_1040187816 = 0;

    result_1040187816 = murmurHash_1040187715((x_1040187815.slice(0, (x_1040187815).length - 1 + 1)));

  return result_1040187816;

}

function isFilled_1073741855(hcode_1073741856) {
  var result_1073741857 = false;

    result_1073741857 = !((hcode_1073741856 == 0));

  return result_1073741857;

}

function nextTry_1073741858(h_1073741859, maxHash_1073741860) {
  var result_1073741861 = 0;

    result_1073741861 = ((h_1073741859 + 1) & maxHash_1073741860);

  return result_1073741861;

}

function rawGet_1023410542(t_1023410545, key_1023410546, hc_1023410547, hc_1023410547_Idx) {
            var Temporary3;

  var result_1023410548 = 0;

  BeforeRet: do {
    hc_1023410547[hc_1023410547_Idx] = hash_1040187814(key_1023410546);
    if ((hc_1023410547[hc_1023410547_Idx] == 0)) {
    hc_1023410547[hc_1023410547_Idx] = 314159265;
    }
    
    if (((t_1023410545.data).length == 0)) {
    result_1023410548 = -1;
    break BeforeRet;
    }
    
    var h_1023410599 = (hc_1023410547[hc_1023410547_Idx] & (t_1023410545.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1073741855(t_1023410545.data[h_1023410599].Field0)) break Label2;
            if (!(t_1023410545.data[h_1023410599].Field0 == hc_1023410547[hc_1023410547_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1023410545.data[h_1023410599].Field2, key_1023410546);            }          if (Temporary3) {
          result_1023410548 = h_1023410599;
          break BeforeRet;
          }
          
          h_1023410599 = nextTry_1073741858(h_1023410599, (t_1023410545.data).length - 1);
        }
    } while (false);
    result_1023410548 = (-1 - h_1023410599);
  } while (false);

  return result_1023410548;

}

function mustRehash_1023410878(t_1023410880) {
  var result_1023410881 = false;

    result_1023410881 = ((((t_1023410880.data).length * 2) < (t_1023410880.counter * 3)) || (((t_1023410880.data).length - t_1023410880.counter) < 4));

  return result_1023410881;

}

function rawInsert_1023411454(t_1023411457, data_1023411458, data_1023411458_Idx, key_1023411459, val_1023411460, hc_1023411461, h_1023411462) {
    data_1023411458[data_1023411458_Idx][h_1023411462].Field2 = nimCopy(null, key_1023411459, NTI33554439);
    data_1023411458[data_1023411458_Idx][h_1023411462].Field3 = val_1023411460;
    data_1023411458[data_1023411458_Idx][h_1023411462].Field0 = hc_1023411461;
    data_1023411458[data_1023411458_Idx][h_1023411462].Field1 = -1;
    if ((t_1023411457.first < 0)) {
    t_1023411457.first = h_1023411462;
    }
    
    if ((0 <= t_1023411457.last)) {
    data_1023411458[data_1023411458_Idx][t_1023411457.last].Field1 = h_1023411462;
    }
    
    t_1023411457.last = h_1023411462;

  
}

function enlarge_1023411039(t_1023411042) {
          var Temporary6;
          var Temporary7;

    var n_1023411045 = [];
    n_1023411045 = new Array(((t_1023411042.data).length * 2)); for (var i = 0 ; i < ((t_1023411042.data).length * 2) ; ++i) { n_1023411045[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1023411097 = t_1023411042.first;
    t_1023411042.first = -1;
    t_1023411042.last = -1;
    var Temporary1 = t_1023411042.data; t_1023411042.data = n_1023411045; n_1023411045 = Temporary1;    Label2: do {
        Label3: while (true) {
        if (!(0 <= h_1023411097)) break Label3;
          var nxt_1023411155 = n_1023411045[h_1023411097].Field1;
          var eh_1023411209 = n_1023411045[h_1023411097].Field0;
          if (isFilled_1073741855(eh_1023411209)) {
          var j_1023411213 = (eh_1023411209 & (t_1023411042.data).length - 1);
          Label4: do {
              Label5: while (true) {
              if (!isFilled_1073741855(t_1023411042.data[j_1023411213].Field0)) break Label5;
                j_1023411213 = nextTry_1073741858(j_1023411213, (t_1023411042.data).length - 1);
              }
          } while (false);
          Temporary6 = n_1023411045[h_1023411097].Field2;
          n_1023411045[h_1023411097].Field2 = genericReset(n_1023411045[h_1023411097].Field2, NTI33554439);
          Temporary7 = n_1023411045[h_1023411097].Field3;
          n_1023411045[h_1023411097].Field3 = genericReset(n_1023411045[h_1023411097].Field3, NTI1023410180);
          rawInsert_1023411454(t_1023411042, t_1023411042, "data", Temporary6, Temporary7, n_1023411045[h_1023411097].Field0, j_1023411213);
          }
          
          h_1023411097 = nxt_1023411155;
        }
    } while (false);

  
}

function rawGetKnownHC_1023411736(t_1023411739, key_1023411740, hc_1023411741) {
  var result_1023411742 = 0;

  BeforeRet: do {
    if (((t_1023411739.data).length == 0)) {
    result_1023411742 = -1;
    break BeforeRet;
    }
    
    var h_1023411793 = (hc_1023411741 & (t_1023411739.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1073741855(t_1023411739.data[h_1023411793].Field0)) break Label2;
          if (((t_1023411739.data[h_1023411793].Field0 == hc_1023411741) && eqStrings(t_1023411739.data[h_1023411793].Field2, key_1023411740))) {
          result_1023411742 = h_1023411793;
          break BeforeRet;
          }
          
          h_1023411793 = nextTry_1073741858(h_1023411793, (t_1023411739.data).length - 1);
        }
    } while (false);
    result_1023411742 = (-1 - h_1023411793);
  } while (false);

  return result_1023411742;

}

function HEX5BHEX5DHEX3D_1023410473(t_1023410476, key_1023410477, val_1023410478) {
    if (((t_1023410476.data).length == 0)) {
    var correctSizeHEX60gensym13_1023410528 = slotsNeeded_1073741866(32);
    t_1023410476.counter = 0;
    t_1023410476.data = new Array(correctSizeHEX60gensym13_1023410528); for (var i = 0 ; i < correctSizeHEX60gensym13_1023410528 ; ++i) { t_1023410476.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1023410476.first = -1;
    t_1023410476.last = -1;
    }
    
    var hc_1023410533 = [0];
    var index_1023410771 = rawGet_1023410542(t_1023410476, key_1023410477, hc_1023410533, 0);
    if ((0 <= index_1023410771)) {
    t_1023410476.data[index_1023410771].Field3 = val_1023410478;
    }
    else {
      if (((t_1023410476.data).length == 0)) {
      var correctSizeHEX60gensym18_1023410873 = slotsNeeded_1073741866(32);
      t_1023410476.counter = 0;
      t_1023410476.data = new Array(correctSizeHEX60gensym18_1023410873); for (var i = 0 ; i < correctSizeHEX60gensym18_1023410873 ; ++i) { t_1023410476.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1023410476.first = -1;
      t_1023410476.last = -1;
      }
      
      if (mustRehash_1023410878(t_1023410476)) {
      enlarge_1023411039(t_1023410476);
      index_1023410771 = rawGetKnownHC_1023411736(t_1023410476, key_1023410477, hc_1023410533[0]);
      }
      
      index_1023410771 = (-1 - index_1023410771);
      rawInsert_1023411454(t_1023410476, t_1023410476, "data", key_1023410477, val_1023410478, hc_1023410533[0], index_1023410771);
      t_1023410476.counter += 1;
    }
    

  
}

function HEX5BHEX5DHEX3D_1023412113(obj_1023412114, key_1023412115, val_1023412116) {
    var Temporary1;

    var Temporary1 = obj_1023412114;
    if (ConstSet3[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1023410179)); }
    HEX5BHEX5DHEX3D_1023410473(Temporary1.fields, key_1023412115, val_1023412116);

  
}

function newJInt_1023410267(n_1023410268) {
  var result_1023410269 = null;

    result_1023410269 = {kind: 2, num: n_1023410268, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1023410269;

}

function newJFloat_1023410270(n_1023410271) {
  var result_1023410272 = null;

    result_1023410272 = {kind: 3, fnum: n_1023410271, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1023410272;

}

function newJRawNumber_1023410261(s_1023410262) {
  var result_1023410263 = null;

    result_1023410263 = {kind: 4, str: nimCopy(null, s_1023410262, NTI33554439), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1023410263;

}

function newJString_1023410218(s_1023410219) {
  var result_1023410220 = null;

    result_1023410220 = {kind: 4, str: nimCopy(null, s_1023410219, NTI33554439), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1023410220;

}

function newJBool_1023410273(b_1023410274) {
  var result_1023410275 = null;

    result_1023410275 = {kind: 1, bval: b_1023410274, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1023410275;

}

function newJNull_1023410276() {
  var result_1023410277 = null;

    result_1023410277 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1023410277;

}

function convertObject_1023415467(x_1023415468) {
  var result_1023415469 = null;

    var isRawNumber_1023415470 = [false];
    switch (getVarType_1023415445(x_1023415468, isRawNumber_1023415470, 0)) {
    case 6:
      result_1023415469 = newJArray_1023410309();
      Label1: do {
        var i_1023415475 = 0;
        var colontmp__452984895 = 0;
        colontmp__452984895 = len_1023415464(x_1023415468);
        var i_452984896 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(i_452984896 < colontmp__452984895)) break Label3;
              i_1023415475 = i_452984896;
              add_1023410408(result_1023415469, convertObject_1023415467(x_1023415468[i_1023415475]));
              i_452984896 += 1;
            }
        } while (false);
      } while (false);
      break;
    case 5:
      result_1023415469 = newJObject_1023410278();
      for (var property in x_1023415468) {
        if (x_1023415468.hasOwnProperty(property)) {
      
      var nimProperty_1023415476 = null;
      var nimValue_1023415477 = null;
      nimProperty_1023415476 = property; nimValue_1023415477 = x_1023415468[property];
      HEX5BHEX5DHEX3D_1023412113(result_1023415469, cstrToNimstr(nimProperty_1023415476), convertObject_1023415467(nimValue_1023415477));
      }}
      break;
    case 2:
      result_1023415469 = newJInt_1023410267((x_1023415468));
      break;
    case 3:
      result_1023415469 = newJFloat_1023410270((x_1023415468));
      break;
    case 4:
      if (isRawNumber_1023415470[0]) {
      var value_1023415486 = null;
      value_1023415486 = x_1023415468.toString();
      result_1023415469 = newJRawNumber_1023410261(cstrToNimstr(value_1023415486));
      }
      else {
        result_1023415469 = newJString_1023410218(cstrToNimstr((x_1023415468)));
      }
      
      break;
    case 1:
      result_1023415469 = newJBool_1023410273((x_1023415468));
      break;
    case 0:
      result_1023415469 = newJNull_1023410276();
      break;
    }

  return result_1023415469;

}

function parseJson_1023415495(buffer_1023415496) {
  var result_1023415497 = null;

  BeforeRet: do {
    result_1023415497 = convertObject_1023415467(JSON.parse(toJSStr(buffer_1023415496)));
    break BeforeRet;
  } while (false);

  return result_1023415497;

}
var questions_452984842 = parseJson_1023415495(questions_list_452984840);
var normativeQuestions_452984843 = new Int32Array([1, 6, 11, 18, 23, 26, 33, 37, 43, 47, 48, 53, 58, 62, 68, 72, 77]);
var socialQuestions_452984844 = new Int32Array([1, 3, 5, 6, 8, 11, 12, 14, 17, 18, 20, 21, 22, 23, 25, 26, 28, 31, 37, 38, 39, 43, 44, 45, 47, 48, 53, 54, 55, 60, 61, 64, 68, 69, 72, 76, 77, 79, 80]);
var languageQuestions_452984845 = new Int32Array([2, 7, 15, 27, 35, 58, 66]);
var sensoryQuestions_452984846 = new Int32Array([4, 10, 16, 19, 29, 33, 34, 36, 42, 46, 49, 51, 57, 59, 62, 65, 67, 71, 73, 74]);
var circumscribedInterestsQuestions_452984847 = new Int32Array([9, 13, 24, 30, 32, 40, 41, 50, 52, 56, 63, 70, 75, 78]);
var mainDiv_452984848 = document.getElementById("main");

function integerOutOfRangeError_637534456() {
    raiseException({message: makeNimstrLit("Parsed integer outside of valid range"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_637534458(s_637534459, b_637534460, b_637534460_Idx, start_637534461) {
      var Temporary1;
          var Temporary4;
      var Temporary7;

  var result_637534462 = 0;

    var sign_637534463 = -1;
    var i_637534464 = start_637534461;
    if ((i_637534464 < (s_637534459).length)) {
    if ((s_637534459[i_637534464] == 43)) {
    i_637534464 += 1;
    }
    else {
    if ((s_637534459[i_637534464] == 45)) {
    i_637534464 += 1;
    sign_637534463 = 1;
    }
    }
    }
    
      if (!(i_637534464 < (s_637534459).length)) Temporary1 = false; else {        Temporary1 = (ConstSet4[s_637534459[i_637534464]] != undefined);      }    if (Temporary1) {
    b_637534460[b_637534460_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_637534464 < (s_637534459).length)) Temporary4 = false; else {            Temporary4 = (ConstSet5[s_637534459[i_637534464]] != undefined);          }        if (!Temporary4) break Label3;
          var c_637534487 = (s_637534459[i_637534464] - 48);
          if ((Math.trunc((-9223372036854775808 + c_637534487) / 10) <= b_637534460[b_637534460_Idx])) {
          b_637534460[b_637534460_Idx] = ((b_637534460[b_637534460_Idx] * 10) - c_637534487);
          }
          else {
          integerOutOfRangeError_637534456();
          }
          
          i_637534464 += 1;
          Label5: do {
              Label6: while (true) {
              if (!((i_637534464 < (s_637534459).length) && (s_637534459[i_637534464] == 95))) break Label6;
                i_637534464 += 1;
              }
          } while (false);
        }
    } while (false);
      if (!(sign_637534463 == -1)) Temporary7 = false; else {        Temporary7 = (b_637534460[b_637534460_Idx] == -9223372036854775808);      }    if (Temporary7) {
    integerOutOfRangeError_637534456();
    }
    else {
      b_637534460[b_637534460_Idx] = (b_637534460[b_637534460_Idx] * sign_637534463);
      result_637534462 = (i_637534464 - start_637534461);
    }
    
    }
    

  return result_637534462;

}

function npuParseBiggestInt(s_637534505, number_637534506, number_637534506_Idx, start_637534507) {
  var result_637534508 = 0;

    var res_637534509 = [0];
    result_637534508 = rawParseInt_637534458(s_637534505, res_637534509, 0, start_637534507);
    if (!((result_637534508 == 0))) {
    number_637534506[number_637534506_Idx] = res_637534509[0];
    }
    

  return result_637534508;

}

function npuParseInt(s_637534511, number_637534512, number_637534512_Idx, start_637534513) {
      var Temporary1;

  var result_637534514 = 0;

    var res_637534515 = [0];
    result_637534514 = npuParseBiggestInt(s_637534511, res_637534515, 0, start_637534513);
      if ((res_637534515[0] < -2147483648)) Temporary1 = true; else {        Temporary1 = (2147483647 < res_637534515[0]);      }    if (Temporary1) {
    integerOutOfRangeError_637534456();
    }
    
    if (!((result_637534514 == 0))) {
    number_637534512[number_637534512_Idx] = res_637534515[0];
    }
    

  return result_637534514;

}

function nsuParseInt(s_687866648) {
      var Temporary1;

  var result_687866649 = [0];

    result_687866649[0] = 0;
    var L_687866650 = npuParseInt(s_687866648, result_687866649, 0, 0);
      if (!((L_687866650 == (s_687866648).length))) Temporary1 = true; else {        Temporary1 = (L_687866650 == 0);      }    if (Temporary1) {
    raiseException({message: (makeNimstrLit("invalid integer: ") || []).concat(s_687866648 || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_687866649[0];

}

function HEX5BHEX5D_33557709(s_33557710, i_33557711) {
  var result_33557712 = 0;

    result_33557712 = s_33557710[((s_33557710).length - i_33557711)];

  return result_33557712;

}

function find_452984970(a_452984973, item_452984974) {
  var result_452984975 = 0;

  BeforeRet: do {
    result_452984975 = 0;
    Label1: do {
      var i_452984979 = 0;
      var i_452985384 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_452985384 < (a_452984973).length)) break Label3;
            i_452984979 = a_452984973[i_452985384];
            if ((i_452984979 == item_452984974)) {
            break BeforeRet;
            }
            
            result_452984975 += 1;
            i_452985384 += 1;
          }
      } while (false);
    } while (false);
    result_452984975 = -1;
  } while (false);

  return result_452984975;

}

function contains_452984965(a_452984967, item_452984968) {
  var result_452984969 = false;

  BeforeRet: do {
    result_452984969 = (0 <= find_452984970(a_452984967, item_452984968));
    break BeforeRet;
  } while (false);

  return result_452984969;

}

function score() {
              
function reverse_452985137(score_452985138) {
                var result_452985139 = 0;

                BeforeRet: do {
                  switch (score_452985138) {
                  case 0:
                    result_452985139 = 3;
                    break BeforeRet;
                    break;
                  case 1:
                    result_452985139 = 2;
                    break BeforeRet;
                    break;
                  case 2:
                    result_452985139 = 1;
                    break BeforeRet;
                    break;
                  case 3:
                    result_452985139 = 0;
                    break BeforeRet;
                    break;
                  }
                } while (false);

                return result_452985139;

              }
              var Temporary12;

  BeforeRet: do {
    var responseElems_452985140 = document.getElementsByClassName("response");
    var responses_452985141 = [];
    var totalScore_452985142 = 0;
    var social_452985143 = 0;
    var language_452985144 = 0;
    var sensory_452985145 = 0;
    var circumscribedInterests_452985146 = 0;
    Label1: do {
      var responseElem_452985166 = null;
      var i_452985366 = 0;
      var L_452985367 = (responseElems_452985140).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_452985366 < L_452985367)) break Label3;
            responseElem_452985166 = responseElems_452985140[i_452985366];
            if (responseElem_452985166.checked) {
            var id_452985167 = cstrToNimstr(responseElem_452985166.id);
            responses_452985141.push(nsuParseInt(nimCharToStr(HEX5BHEX5D_33557709(id_452985167, 1))));;
            }
            
            i_452985366 += 1;
          }
      } while (false);
    } while (false);
    if (((responses_452985141).length < 80)) {
    window.alert("You have not answered all questions. Please go back and do so.");
    break BeforeRet;
    }
    
    Label4: do {
      var question_452985176 = -1;
      Label5: do {
        var response_452985195 = 0;
        var i_452985372 = 0;
        var L_452985373 = (responses_452985141).length;
        Label6: do {
            Label7: while (true) {
            if (!(i_452985372 < L_452985373)) break Label7;
              response_452985195 = responses_452985141[i_452985372];
              question_452985176 += 1;
              if (contains_452984965(normativeQuestions_452984843, (question_452985176 + 1))) {
              responses_452985141[question_452985176] = reverse_452985137(response_452985195);
              }
              
              if (contains_452984965(socialQuestions_452984844, (question_452985176 + 1))) {
              social_452985143 += responses_452985141[question_452985176];
              }
              else {
              if (contains_452984965(languageQuestions_452984845, (question_452985176 + 1))) {
              language_452985144 += responses_452985141[question_452985176];
              }
              else {
              if (contains_452984965(sensoryQuestions_452984846, (question_452985176 + 1))) {
              sensory_452985145 += responses_452985141[question_452985176];
              }
              else {
              if (contains_452984965(circumscribedInterestsQuestions_452984847, (question_452985176 + 1))) {
              circumscribedInterests_452985146 += responses_452985141[question_452985176];
              }
              }}}
              i_452985372 += 1;
            }
        } while (false);
      } while (false);
    } while (false);
    totalScore_452985142 = (((social_452985143 + language_452985144) + sensory_452985145) + circumscribedInterests_452985146);
    var scoresRow_452985246 = document.getElementById("scores-row");
    var scores_452985247 = document.getElementById("scores");
    scores_452985247.style.display = "block";
    scores_452985247.scrollIntoView();
    Label8: do {
      var idx_452985248 = -1;
      Label9: do {
        var i_452985283 = 0;
        var i_452985378 = 0;
        Label10: do {
            Label11: while (true) {
            if (!true) break Label11;
              i_452985283 = (Temporary12 = new Int32Array([totalScore_452985142, language_452985144, social_452985143, sensory_452985145, circumscribedInterests_452985146]), Temporary12)[i_452985378];
              idx_452985248 += 1;
              var elem_452985288 = document.getElementById(toJSStr(HEX24_318767107((idx_452985248 + 1))));
              elem_452985288.innerHTML = toJSStr((makeNimstrLit("<b>") || []).concat(HEX24_318767107(i_452985283) || [],makeNimstrLit("</b>") || []));
              scoresRow_452985246.appendChild(elem_452985288);
              if ((4 <= i_452985378)) {
              break Label10;
              }
              
              i_452985378 += 1;
            }
        } while (false);
      } while (false);
    } while (false);
    rawEcho(makeNimstrLit("Total: "), HEX24_318767107(totalScore_452985142));
    rawEcho(makeNimstrLit("Social: "), HEX24_318767107(social_452985143));
    rawEcho(makeNimstrLit("Language: "), HEX24_318767107(language_452985144));
    rawEcho(makeNimstrLit("Sensory: "), HEX24_318767107(sensory_452985145));
    rawEcho(makeNimstrLit("Circumscribed Interests: "), HEX24_318767107(circumscribedInterests_452985146));
  } while (false);

  
}

function parseSaturatedNatural_637534524(s_637534525, b_637534526, b_637534526_Idx, start_637534527) {
      var Temporary1;
          var Temporary4;

  var result_637534528 = 0;

    var i_637534529 = start_637534527;
    if (((i_637534529 < (s_637534525).length) && (s_637534525[i_637534529] == 43))) {
    i_637534529 += 1;
    }
    
      if (!(i_637534529 < (s_637534525).length)) Temporary1 = false; else {        Temporary1 = (ConstSet11[s_637534525[i_637534529]] != undefined);      }    if (Temporary1) {
    b_637534526[b_637534526_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_637534529 < (s_637534525).length)) Temporary4 = false; else {            Temporary4 = (ConstSet12[s_637534525[i_637534529]] != undefined);          }        if (!Temporary4) break Label3;
          var c_637534548 = (s_637534525[i_637534529] - 48);
          if ((b_637534526[b_637534526_Idx] <= Math.trunc((2147483647 - c_637534548) / 10))) {
          b_637534526[b_637534526_Idx] = ((b_637534526[b_637534526_Idx] * 10) + c_637534548);
          }
          else {
            b_637534526[b_637534526_Idx] = 2147483647;
          }
          
          i_637534529 += 1;
          Label5: do {
              Label6: while (true) {
              if (!((i_637534529 < (s_637534525).length) && (s_637534525[i_637534529] == 95))) break Label6;
                i_637534529 += 1;
              }
          } while (false);
        }
    } while (false);
    result_637534528 = (i_637534529 - start_637534527);
    }
    

  return result_637534528;

}

function HEX5BHEX5D_654314665(s_654314668, x_654314669) {
  var result_654314670 = [];

    var a_654314672 = x_654314669.a;
    var L_654314674 = ((((s_654314668).length - x_654314669.b) - a_654314672) + 1);
    result_654314670 = nimCopy(null, mnewString(L_654314674), NTI33554439);
    Label1: do {
      var i_654314679 = 0;
      var i_452985408 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_452985408 < L_654314674)) break Label3;
            i_654314679 = i_452985408;
            result_654314670[i_654314679] = s_654314668[(i_654314679 + a_654314672)];
            i_452985408 += 1;
          }
      } while (false);
    } while (false);

  return result_654314670;

}

function HEX2EHEX2E_654314638(a_654314641, b_654314642) {
  var result_654314645 = ({a: 0, b: 0});

    result_654314645 = nimCopy(result_654314645, {a: a_654314641, b: b_654314642}, NTI654321830);

  return result_654314645;

}

function parseStandardFormatSpecifier_603979832(s_603979833, start_603979834, ignoreUnknownSuffix_603979835) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_603979836 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_603979836.fill = 32;
    result_603979836.align = 0;
    result_603979836.sign = 45;
    var i_603979838 = start_603979834;
    if ((((i_603979838 + 1) < (s_603979833).length) && (ConstSet7[s_603979833[(i_603979838 + 1)]] != undefined))) {
    result_603979836.fill = s_603979833[i_603979838];
    result_603979836.align = s_603979833[(i_603979838 + 1)];
    i_603979838 += 2;
    }
    else {
    if (((i_603979838 < (s_603979833).length) && (ConstSet8[s_603979833[i_603979838]] != undefined))) {
    result_603979836.align = s_603979833[i_603979838];
    i_603979838 += 1;
    }
    }
    if (((i_603979838 < (s_603979833).length) && (ConstSet9[s_603979833[i_603979838]] != undefined))) {
    result_603979836.sign = s_603979833[i_603979838];
    i_603979838 += 1;
    }
    
    if (((i_603979838 < (s_603979833).length) && (s_603979833[i_603979838] == 35))) {
    result_603979836.alternateForm = true;
    i_603979838 += 1;
    }
    
      if (!(((i_603979838 + 1) < (s_603979833).length) && (s_603979833[i_603979838] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet10[s_603979833[(i_603979838 + 1)]] != undefined);      }    if (Temporary1) {
    result_603979836.padWithZero = true;
    i_603979838 += 1;
    }
    
    var parsedLength_603979875 = parseSaturatedNatural_637534524(s_603979833, result_603979836, "minimumWidth", i_603979838);
    i_603979838 += parsedLength_603979875;
    if (((i_603979838 < (s_603979833).length) && (s_603979833[i_603979838] == 46))) {
    i_603979838 += 1;
    var parsedLengthB_603979884 = parseSaturatedNatural_637534524(s_603979833, result_603979836, "precision", i_603979838);
    i_603979838 += parsedLengthB_603979884;
    }
    else {
      result_603979836.precision = -1;
    }
    
      if (!(i_603979838 < (s_603979833).length)) Temporary2 = false; else {        Temporary2 = (ConstSet13[s_603979833[i_603979838]] != undefined);      }    if (Temporary2) {
    result_603979836.typ = s_603979833[i_603979838];
    i_603979838 += 1;
    }
    
    result_603979836.endPosition = i_603979838;
      if (!!((i_603979838 == (s_603979833).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_603979835);      }    if (Temporary3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_654314665(s_603979833, HEX2EHEX2E_654314638(i_603979838, 1)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_603979836;

}

function mkDigit_603979781(v_603979782, typ_603979783) {
      var Temporary1;

  var result_603979784 = [];

    if ((v_603979782 < 10)) {
    result_603979784 = nimCopy(null, nimCharToStr((48 + v_603979782)), NTI33554439);
    }
    else {
      if ((typ_603979783 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_603979784 = nimCopy(null, nimCharToStr(((Temporary1 + v_603979782) - 10)), NTI33554439);
    }
    

  return result_603979784;

}

function nsuRepeatChar(c_687866869, count_687866870) {
  var result_687866871 = [];

    result_687866871 = nimCopy(null, mnewString(count_687866870), NTI33554439);
    Label1: do {
      var i_687866876 = 0;
      var colontmp__452985420 = 0;
      colontmp__452985420 = (count_687866870 - 1);
      var res_452985421 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_452985421 <= colontmp__452985420)) break Label3;
            i_687866876 = res_452985421;
            result_687866871[i_687866876] = c_687866869;
            res_452985421 += 1;
          }
      } while (false);
    } while (false);

  return result_687866871;

}

function formatInt_452985006(n_452985008, radix_452985009, spec_452985010) {
    var Temporary1;
    var Temporary8;

  var result_452985011 = [];

    var n_452985014 = n_452985008;
    var negative_452985015 = (n_452985014 < 0);
    if (negative_452985015) {
    Temporary1 = ((~(n_452985014) + 1) );
    }
    else {
    Temporary1 = n_452985014;
    }
    
    var v_452985016 = Temporary1;
    var xx_452985017 = [];
    if (spec_452985010.alternateForm) {
    switch (spec_452985010.typ) {
    case 88:
      xx_452985017 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 120:
      xx_452985017 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 98:
      xx_452985017 = nimCopy(null, makeNimstrLit("0b"), NTI33554439);
      break;
    case 111:
      xx_452985017 = nimCopy(null, makeNimstrLit("0o"), NTI33554439);
      break;
    default: 
      break;
    }
    }
    
    if ((v_452985016 == 0)) {
    result_452985011 = nimCopy(null, makeNimstrLit("0"), NTI33554439);
    }
    else {
      result_452985011 = nimCopy(null, [], NTI33554439);
      Label2: do {
          Label3: while (true) {
          if (!(0 < v_452985016)) break Label3;
            var d_452985018 = (v_452985016 % radix_452985009);
            v_452985016 = Math.trunc(((v_452985016 / radix_452985009) ));
            result_452985011.push.apply(result_452985011, mkDigit_603979781(d_452985018, spec_452985010.typ));;
          }
      } while (false);
      Label4: do {
        var idx_452985023 = 0;
        var colontmp__452985412 = 0;
        colontmp__452985412 = Math.trunc((result_452985011).length / 2);
        var i_452985413 = 0;
        Label5: do {
            Label6: while (true) {
            if (!(i_452985413 < colontmp__452985412)) break Label6;
              idx_452985023 = i_452985413;
              var Temporary7 = result_452985011[idx_452985023]; result_452985011[idx_452985023] = result_452985011[(((result_452985011).length - idx_452985023) - 1)]; result_452985011[(((result_452985011).length - idx_452985023) - 1)] = Temporary7;              i_452985413 += 1;
            }
        } while (false);
      } while (false);
    }
    
    if (spec_452985010.padWithZero) {
    if (negative_452985015) Temporary8 = true; else {      Temporary8 = !((spec_452985010.sign == 45));    }    var sign_452985028 = Temporary8;
    var toFill_452985032 = (((spec_452985010.minimumWidth - (result_452985011).length) - (xx_452985017).length) - (sign_452985028 ? 1 : 0));
    if ((0 < toFill_452985032)) {
    result_452985011 = nimCopy(null, (nsuRepeatChar(48, toFill_452985032) || []).concat(result_452985011 || []), NTI33554439);
    }
    
    }
    
    if (negative_452985015) {
    result_452985011 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_452985017 || [],result_452985011 || []), NTI33554439);
    }
    else {
    if (!((spec_452985010.sign == 45))) {
    result_452985011 = nimCopy(null, [spec_452985010.sign].concat(xx_452985017 || [],result_452985011 || []), NTI33554439);
    }
    else {
      result_452985011 = nimCopy(null, (xx_452985017 || []).concat(result_452985011 || []), NTI33554439);
    }
    }
    if ((spec_452985010.align == 60)) {
    Label9: do {
      var i_452985037 = 0;
      var colontmp__452985416 = 0;
      colontmp__452985416 = (result_452985011).length;
      var i_452985417 = colontmp__452985416;
      Label10: do {
          Label11: while (true) {
          if (!(i_452985417 < spec_452985010.minimumWidth)) break Label11;
            i_452985037 = i_452985417;
            addChar(result_452985011, spec_452985010.fill);;
            i_452985417 += 1;
          }
      } while (false);
    } while (false);
    }
    else {
      var toFill_452985038 = (spec_452985010.minimumWidth - (result_452985011).length);
      if ((spec_452985010.align == 94)) {
      var half_452985039 = Math.trunc(toFill_452985038 / 2);
      result_452985011 = nimCopy(null, (nsuRepeatChar(spec_452985010.fill, half_452985039) || []).concat(result_452985011 || [],nsuRepeatChar(spec_452985010.fill, (toFill_452985038 - half_452985039)) || []), NTI33554439);
      }
      else {
        if ((0 < toFill_452985038)) {
        result_452985011 = nimCopy(null, (nsuRepeatChar(spec_452985010.fill, toFill_452985038) || []).concat(result_452985011 || []), NTI33554439);
        }
        
      }
      
    }
    

  return result_452985011;

}

function formatValue_452984998(result_452985000, result_452985000_Idx, value_452985001, specifier_452985002) {
  BeforeRet: do {
    if (((specifier_452985002).length == 0)) {
    result_452985000[result_452985000_Idx].push.apply(result_452985000[result_452985000_Idx], HEX24_318767107(value_452985001));;
    break BeforeRet;
    }
    
    var spec_452985003 = parseStandardFormatSpecifier_603979832(specifier_452985002, 0, false);
    var radix_452985004 = 10;
    switch (spec_452985003.typ) {
    case 120:
    case 88:
      radix_452985004 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_452985004 = 2;
      break;
    case 111:
      radix_452985004 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_452985003.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_452985000[result_452985000_Idx].push.apply(result_452985000[result_452985000_Idx], formatInt_452985006(value_452985001, radix_452985004, spec_452985003));;
  } while (false);

  
}

function nucruneLen(s_654311434) {
  var result_654311435 = 0;

    result_654311435 = 0;
    var i_654311436 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_654311436 < (s_654311434).length)) break Label2;
          if ((s_654311434[i_654311436] <= 127)) {
          i_654311436 += 1;
          }
          else {
          if (((s_654311434[i_654311436] >>> 5) == 6)) {
          i_654311436 += 2;
          }
          else {
          if (((s_654311434[i_654311436] >>> 4) == 14)) {
          i_654311436 += 3;
          }
          else {
          if (((s_654311434[i_654311436] >>> 3) == 30)) {
          i_654311436 += 4;
          }
          else {
          if (((s_654311434[i_654311436] >>> 2) == 62)) {
          i_654311436 += 5;
          }
          else {
          if (((s_654311434[i_654311436] >>> 1) == 126)) {
          i_654311436 += 6;
          }
          else {
          i_654311436 += 1;
          }
          }}}}}
          result_654311435 += 1;
        }
    } while (false);

  return result_654311435;

}

function runeLenAt_654311489(s_654311490, i_654311491) {
  var result_654311492 = 0;

    if ((s_654311490[i_654311491] <= 127)) {
    result_654311492 = 1;
    }
    else {
    if (((s_654311490[i_654311491] >>> 5) == 6)) {
    result_654311492 = 2;
    }
    else {
    if (((s_654311490[i_654311491] >>> 4) == 14)) {
    result_654311492 = 3;
    }
    else {
    if (((s_654311490[i_654311491] >>> 3) == 30)) {
    result_654311492 = 4;
    }
    else {
    if (((s_654311490[i_654311491] >>> 2) == 62)) {
    result_654311492 = 5;
    }
    else {
    if (((s_654311490[i_654311491] >>> 1) == 126)) {
    result_654311492 = 6;
    }
    else {
      result_654311492 = 1;
    }
    }}}}}

  return result_654311492;

}

function runeOffset_654312059(s_654312060, pos_654312061, start_654312062) {
  var result_654312063 = 0;

  BeforeRet: do {
    var i_654312064 = 0;
    var o_654312065 = start_654312062;
    Label1: do {
        Label2: while (true) {
        if (!(i_654312064 < pos_654312061)) break Label2;
          o_654312065 += runeLenAt_654311489(s_654312060, o_654312065);
          if (((s_654312060).length <= o_654312065)) {
          result_654312063 = -1;
          break BeforeRet;
          }
          
          i_654312064 += 1;
        }
    } while (false);
    result_654312063 = o_654312065;
    break BeforeRet;
  } while (false);

  return result_654312063;

}

function validateUtf8_654311701(s_654311702) {
            var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;

  var result_654311703 = 0;

  BeforeRet: do {
    var i_654311704 = 0;
    var L_654311705 = (s_654311702).length;
    Label1: do {
        Label2: while (true) {
        if (!(i_654311704 < L_654311705)) break Label2;
          if ((s_654311702[i_654311704] <= 127)) {
          i_654311704 += 1;
          }
          else {
          if (((s_654311702[i_654311704] >>> 5) == 6)) {
          if ((s_654311702[i_654311704] < 194)) {
          result_654311703 = i_654311704;
          break BeforeRet;
          }
          
            if (!((i_654311704 + 1) < L_654311705)) Temporary3 = false; else {              Temporary3 = ((s_654311702[(i_654311704 + 1)] >>> 6) == 2);            }          if (Temporary3) {
          i_654311704 += 2;
          }
          else {
            result_654311703 = i_654311704;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_654311702[i_654311704] >>> 4) == 14)) {
            if (!((i_654311704 + 2) < L_654311705)) Temporary5 = false; else {              Temporary5 = ((s_654311702[(i_654311704 + 1)] >>> 6) == 2);            }            if (!Temporary5) Temporary4 = false; else {              Temporary4 = ((s_654311702[(i_654311704 + 2)] >>> 6) == 2);            }          if (Temporary4) {
          i_654311704 += 3;
          }
          else {
            result_654311703 = i_654311704;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_654311702[i_654311704] >>> 3) == 30)) {
            if (!((i_654311704 + 3) < L_654311705)) Temporary8 = false; else {              Temporary8 = ((s_654311702[(i_654311704 + 1)] >>> 6) == 2);            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = ((s_654311702[(i_654311704 + 2)] >>> 6) == 2);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = ((s_654311702[(i_654311704 + 3)] >>> 6) == 2);            }          if (Temporary6) {
          i_654311704 += 4;
          }
          else {
            result_654311703 = i_654311704;
            break BeforeRet;
          }
          
          }
          else {
            result_654311703 = i_654311704;
            break BeforeRet;
          }
          }}}
        }
    } while (false);
    result_654311703 = -1;
    break BeforeRet;
  } while (false);

  return result_654311703;

}

function alignString_603979794(s_603979795, minimumWidth_603979796, align_603979797, fill_603979798) {
      var Temporary1;

  var result_603979799 = [];

    if ((minimumWidth_603979796 == 0)) {
    result_603979799 = nimCopy(null, s_603979795, NTI33554439);
    }
    else {
      if ((validateUtf8_654311701(s_603979795) == -1)) {
      Temporary1 = nucruneLen(s_603979795);
      }
      else {
      Temporary1 = (s_603979795).length;
      }
      
      var sRuneLen_603979800 = Temporary1;
      var toFill_603979801 = (minimumWidth_603979796 - sRuneLen_603979800);
      if ((toFill_603979801 <= 0)) {
      result_603979799 = nimCopy(null, s_603979795, NTI33554439);
      }
      else {
      if (((align_603979797 == 60) || (align_603979797 == 0))) {
      result_603979799 = nimCopy(null, (s_603979795 || []).concat(nsuRepeatChar(fill_603979798, toFill_603979801) || []), NTI33554439);
      }
      else {
      if ((align_603979797 == 94)) {
      var half_603979802 = Math.trunc(toFill_603979801 / 2);
      result_603979799 = nimCopy(null, (nsuRepeatChar(fill_603979798, half_603979802) || []).concat(s_603979795 || [],nsuRepeatChar(fill_603979798, (toFill_603979801 - half_603979802)) || []), NTI33554439);
      }
      else {
        result_603979799 = nimCopy(null, (nsuRepeatChar(fill_603979798, toFill_603979801) || []).concat(s_603979795 || []), NTI33554439);
      }
      }}
    }
    

  return result_603979799;

}

function formatValue_603979936(result_603979937, result_603979937_Idx, value_603979938, specifier_603979939) {
    var spec_603979940 = parseStandardFormatSpecifier_603979832(specifier_603979939, 0, false);
    var value_603979941 = nimCopy(null, value_603979938, NTI33554439);
    switch (spec_603979940.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_603979940.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_603979940.precision == -1))) {
    if ((spec_603979940.precision < nucruneLen(value_603979941))) {
    (value_603979941.length = runeOffset_654312059(value_603979941, spec_603979940.precision, 0));
    }
    
    }
    
    result_603979937[result_603979937_Idx].push.apply(result_603979937[result_603979937_Idx], alignString_603979794(value_603979941, spec_603979940.minimumWidth, spec_603979940.align, spec_603979940.fill));;

  
}

function generateHtml_452984913() {
          var Temporary4;
                var Temporary7;
                var Temporary8;
                  var Temporary9;

    var responses_452984914 = [makeNimstrLit("Never true"), makeNimstrLit("True only when I was younger than 16"), makeNimstrLit("True only now"), makeNimstrLit("True now and when I was young")];
    Label1: do {
      var qidx_452984933 = -1;
      Label2: do {
        var question_452984934 = null;
        Label3: do {
          var i_452985400 = null;
          var colontmp__452985401 = [];
          var Temporary4 = questions_452984842;
          if (ConstSet6[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1023410179)); }
          colontmp__452985401 = Temporary4.elems;
          var i_452985402 = 0;
          var L_452985403 = (colontmp__452985401).length;
          Label5: do {
              Label6: while (true) {
              if (!(i_452985402 < L_452985403)) break Label6;
                i_452985400 = colontmp__452985401[i_452985402];
                question_452984934 = i_452985400;
                qidx_452984933 += 1;
                var questionElem_452984939 = document.createElement("h4");
                if (contains_452984965(normativeQuestions_452984843, (qidx_452984933 + 1))) {
                var fmtRes_452984992 = [mnewString(0)];
                formatValue_452984998(fmtRes_452984992, 0, (qidx_452984933 + 1), []);
                fmtRes_452984992[0].push.apply(fmtRes_452984992[0], makeNimstrLit("*. "));;
                var Temporary8 = question_452984934;
                if (ConstSet14[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1023410179)); }
                formatValue_603979936(fmtRes_452984992, 0, Temporary8.str, []);
                Temporary7 = fmtRes_452984992[0];
                }
                else {
                  var fmtRes_452985044 = [mnewString(0)];
                  formatValue_452984998(fmtRes_452985044, 0, (qidx_452984933 + 1), []);
                  fmtRes_452985044[0].push.apply(fmtRes_452985044[0], makeNimstrLit(". "));;
                  var Temporary9 = question_452984934;
                  if (ConstSet15[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1023410179)); }
                  formatValue_603979936(fmtRes_452985044, 0, Temporary9.str, []);
                Temporary7 = fmtRes_452985044[0];
                }
                
                questionElem_452984939.innerText = toJSStr(Temporary7);
                var fmtRes_452985054 = [mnewString(0)];
                fmtRes_452985054[0].push.apply(fmtRes_452985054[0], makeNimstrLit("question"));;
                formatValue_452984998(fmtRes_452985054, 0, qidx_452984933, []);
                questionElem_452984939.id = toJSStr(fmtRes_452985054[0]);
                mainDiv_452984848.appendChild(questionElem_452984939);
                Label10: do {
                  var idx_452985060 = -1;
                  Label11: do {
                    var response_452985095 = [];
                    var i_452985391 = 0;
                    Label12: do {
                        Label13: while (true) {
                        if (!true) break Label13;
                          response_452985095 = responses_452984914[i_452985391];
                          idx_452985060 += 1;
                          var responseElem_452985100 = document.createElement("input");
                          responseElem_452985100.setAttribute("type", "radio");
                          var fmtRes_452985105 = [mnewString(0)];
                          fmtRes_452985105[0].push.apply(fmtRes_452985105[0], makeNimstrLit("question"));;
                          formatValue_452984998(fmtRes_452985105, 0, qidx_452984933, []);
                          fmtRes_452985105[0].push.apply(fmtRes_452985105[0], makeNimstrLit("-"));;
                          formatValue_452984998(fmtRes_452985105, 0, idx_452985060, []);
                          responseElem_452985100.id = toJSStr(fmtRes_452985105[0]);
                          responseElem_452985100.className = "response";
                          var fmtRes_452985120 = [mnewString(0)];
                          fmtRes_452985120[0].push.apply(fmtRes_452985120[0], makeNimstrLit("question"));;
                          formatValue_452984998(fmtRes_452985120, 0, qidx_452984933, []);
                          responseElem_452985100.name = toJSStr(fmtRes_452985120[0]);
                          var labelElem_452985126 = document.createElement("label");
                          labelElem_452985126.setAttribute("for", responseElem_452985100.id);
                          labelElem_452985126.innerHTML = toJSStr(response_452985095);
                          mainDiv_452984848.appendChild(responseElem_452985100);
                          mainDiv_452984848.appendChild(labelElem_452985126);
                          mainDiv_452984848.appendChild(document.createElement("br"));
                          if ((3 <= i_452985391)) {
                          break Label12;
                          }
                          
                          i_452985391 += 1;
                        }
                    } while (false);
                  } while (false);
                } while (false);
                i_452985402 += 1;
              }
          } while (false);
        } while (false);
      } while (false);
    } while (false);

  
}
generateHtml_452984913();
